// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//------------------------------------
//                Run after edit :
//                npx prisma generate
//                npx prisma db push
//------------------------------------

model User {
  id          Int         @id @default(autoincrement())
  username    String?     @unique
  password    String?
  firstname   String
  lastname    String
  email       String      @unique
  phone       String?
  role        Role        @default(NONE)
  presidents  Colony[]    @relation("presidents")
  treasurers  Colony[]    @relation("treasurers")
  secretaries Colony[]    @relation("secretaries")
  owners      Residence[] @relation("owners")
  tenants     Residence[] @relation("tenants")
  responsible Residence[] @relation("responsibles")
  active      Boolean     @default(false)
  blocked     Boolean     @default(false)
  imageUrl    String?
  langKey     LangKey     @default(ES)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Colony {
  id                         Int            @id @default(autoincrement())
  name                       String
  createdAt                  DateTime       @default(now())
  updatedAt                  DateTime       @updatedAt
  active                     Boolean        @default(false)
  deleted                    Boolean        @default(false)
  address                    String
  nearBy                     String
  city                       String
  type                       ColonyType
  roleNotificationsSuspended Boolean        @default(false)
  president                  User           @relation("presidents", fields: [presidentId], references: [id])
  presidentId                Int
  treasurer                  User           @relation("treasurers", fields: [treasurerId], references: [id])
  treasurerId                Int
  secretary                  User           @relation("secretaries", fields: [secretaryId], references: [id])
  secretaryId                Int
  residencies                Residence[]
  residenceTags              ResidenceTag[]
}

model Residence {
  id            Int            @id @default(autoincrement())
  doorNumber    String
  colony        Colony         @relation(fields: [colonyId], references: [id])
  colonyId      Int
  owner         User           @relation("owners", fields: [ownerId], references: [id])
  ownerId       Int
  tenant        User           @relation("tenants", fields: [tenantId], references: [id])
  tenantId      Int
  responsible   User           @relation("responsibles", fields: [responsibleId], references: [id])
  responsibleId Int
  residenceTags ResidenceTag[]
}

model ResidenceTag {
  id         Int         @id @default(autoincrement())
  colony     Colony      @relation(fields: [colonyId], references: [id])
  colonyId   Int
  residences Residence[]
  name       String
  deleted    Boolean     @default(false)
}

enum ColonyType {
  HOUSES
  APARTMENTS
}

enum Role {
  NONE
  USER
  ADMIN
  GOD
}

enum LangKey {
  EN
  ES
}
